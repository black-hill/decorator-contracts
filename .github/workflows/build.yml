# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node.js modules
      uses: actions/cache@v1
      with:
        path: "%AppData%\npm-cache" # npm cache files are stored under the AppData folder on Windows
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-    
    
    - name: npm install, build, and test
      run: |
        npm install
        npm run build-nofix
        npm test
      env:
        CI: true

    - name: Populate VERSION
      run: |
        $command = "git describe --abbrev=0 --tags";
        $tag = Invoke-Expression -Command:$command;
        $package = Get-Content './package.json' -raw | ConvertFrom-Json
        $package.version = $tag.substring(1)
        $package | ConvertTo-Json -depth 32 | Set-Content './package.json'
      shell: pwsh
  
    - name: npm pack
      run: |
        npm pack
      working-directory: ./
      
    - name: Revert VERSION to default
      run: |
        $package = Get-Content './package.json' -raw | ConvertFrom-Json
        $package.version = "0.0.0"
        $package | ConvertTo-Json -depth 32 | Set-Content './package.json'
      working-directory: ./
    
